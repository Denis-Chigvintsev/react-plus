{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\\\\Desktop\\\\Urban Uni\\\\\\u0414\\u0417-15\\\\DZ15\\\\src\\\\components\\\\Container\\\\Container.jsx\",\n  _s = $RefreshSig$();\nimport \"./Container.css\";\nimport { useState, useEffect } from \"react\";\nimport Post from \"../Post/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet els = {};\nfunction Container(props) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  let {\n    s,\n    setS\n  } = props;\n  let locS;\n  let deleted;\n  useEffect(() => {\n    fetch(\"https://restcountries.com/v3.1/all\").then(response => response.json()).then(json => setPosts(json));\n    locS = localStorage.getItem(\"countries\");\n  }, []);\n  //console.log(posts);\n  for (let i = 0; i < posts.length; i++) {\n    if (!locS) {\n      let deleted = \"false\";\n    } else deleted = els = {\n      id: i,\n      name: posts[i].name.common,\n      rus: posts[i].translations.rus.common,\n      continent: posts[i].continents,\n      capital: posts[i].capital,\n      population: posts[i].population,\n      flag: posts[i].flags.svg,\n      map: posts[i].maps.googleMaps\n    };\n    s[i] = els;\n  }\n  setTimeout(() => setS(s), 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: posts.map(el => /*#__PURE__*/_jsxDEV(Post, {\n      name: el.name.common,\n      rus: el.translations.rus.common,\n      continent: el.continents,\n      capital: el.capital,\n      population: el.population,\n      flag: el.flags.svg,\n      map: el.maps.googleMaps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Container, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Container;\nexport default Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["useState","useEffect","Post","jsxDEV","_jsxDEV","els","Container","props","_s","posts","setPosts","s","setS","locS","deleted","fetch","then","response","json","localStorage","getItem","i","length","id","name","common","rus","translations","continent","continents","capital","population","flag","flags","svg","map","maps","googleMaps","setTimeout","className","children","el","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Пользователь/Desktop/Urban Uni/ДЗ-15/DZ15/src/components/Container/Container.jsx"],"sourcesContent":["import \"./Container.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Post from \"../Post/Post\";\r\n\r\nlet els = {};\r\n\r\nfunction Container(props) {\r\n  const [posts, setPosts] = useState([]);\r\n  let { s, setS } = props;\r\n  let locS;\r\n  let deleted;\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://restcountries.com/v3.1/all\")\r\n      .then((response) => response.json())\r\n      .then((json) => setPosts(json));\r\n    locS = localStorage.getItem(\"countries\");\r\n  }, []);\r\n  //console.log(posts);\r\n  for (let i = 0; i < posts.length; i++) {\r\n    if (!locS) {\r\n      let deleted = \"false\";\r\n    } else\r\n      deleted = els = {\r\n        id: i,\r\n        name: posts[i].name.common,\r\n        rus: posts[i].translations.rus.common,\r\n        continent: posts[i].continents,\r\n        capital: posts[i].capital,\r\n        population: posts[i].population,\r\n        flag: posts[i].flags.svg,\r\n        map: posts[i].maps.googleMaps,\r\n      };\r\n\r\n    s[i] = els;\r\n  }\r\n  setTimeout(() => setS(s), 0);\r\n  return (\r\n    <div className=\"main\">\r\n      {posts.map((el) => (\r\n        <Post\r\n          name={el.name.common}\r\n          rus={el.translations.rus.common}\r\n          continent={el.continents}\r\n          capital={el.capital}\r\n          population={el.population}\r\n          flag={el.flags.svg}\r\n          map={el.maps.googleMaps}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nexport default Container;\r\n"],"mappings":";;AAAA,OAAO,iBAAiB;AACxB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,IAAIC,GAAG,GAAG,CAAC,CAAC;AAEZ,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,IAAI;IAAEW,CAAC;IAAEC;EAAK,CAAC,GAAGL,KAAK;EACvB,IAAIM,IAAI;EACR,IAAIC,OAAO;EAEXb,SAAS,CAAC,MAAM;IACdc,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEE,IAAI,IAAKR,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACjCL,IAAI,GAAGM,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EACN;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,KAAK,CAACa,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,IAAI,CAACR,IAAI,EAAE;MACT,IAAIC,OAAO,GAAG,OAAO;IACvB,CAAC,MACCA,OAAO,GAAGT,GAAG,GAAG;MACdkB,EAAE,EAAEF,CAAC;MACLG,IAAI,EAAEf,KAAK,CAACY,CAAC,CAAC,CAACG,IAAI,CAACC,MAAM;MAC1BC,GAAG,EAAEjB,KAAK,CAACY,CAAC,CAAC,CAACM,YAAY,CAACD,GAAG,CAACD,MAAM;MACrCG,SAAS,EAAEnB,KAAK,CAACY,CAAC,CAAC,CAACQ,UAAU;MAC9BC,OAAO,EAAErB,KAAK,CAACY,CAAC,CAAC,CAACS,OAAO;MACzBC,UAAU,EAAEtB,KAAK,CAACY,CAAC,CAAC,CAACU,UAAU;MAC/BC,IAAI,EAAEvB,KAAK,CAACY,CAAC,CAAC,CAACY,KAAK,CAACC,GAAG;MACxBC,GAAG,EAAE1B,KAAK,CAACY,CAAC,CAAC,CAACe,IAAI,CAACC;IACrB,CAAC;IAEH1B,CAAC,CAACU,CAAC,CAAC,GAAGhB,GAAG;EACZ;EACAiC,UAAU,CAAC,MAAM1B,IAAI,CAACD,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B,oBACEP,OAAA;IAAKmC,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClB/B,KAAK,CAAC0B,GAAG,CAAEM,EAAE,iBACZrC,OAAA,CAACF,IAAI;MACHsB,IAAI,EAAEiB,EAAE,CAACjB,IAAI,CAACC,MAAO;MACrBC,GAAG,EAAEe,EAAE,CAACd,YAAY,CAACD,GAAG,CAACD,MAAO;MAChCG,SAAS,EAAEa,EAAE,CAACZ,UAAW;MACzBC,OAAO,EAAEW,EAAE,CAACX,OAAQ;MACpBC,UAAU,EAAEU,EAAE,CAACV,UAAW;MAC1BC,IAAI,EAAES,EAAE,CAACR,KAAK,CAACC,GAAI;MACnBC,GAAG,EAAEM,EAAE,CAACL,IAAI,CAACC;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACrC,EAAA,CA9CQF,SAAS;AAAAwC,EAAA,GAATxC,SAAS;AA+ClB,eAAeA,SAAS;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}